#! /bin/sh
# Copyright (C) 2013-2014 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check that $(am__make_keepgoing) works as expected.

. test-init.sh

plan_ 60

mkdir kool # Also used later.
if echo nil: | $MAKE -I kool -f -; then
  make_supports_option_I () { return 0; }
else
  make_supports_option_I () { return 1; }
fi

echo AC_OUTPUT >> configure.ac

cat > Makefile.am <<'END'
all:
	@echo 'Default target $@ should not be called'>&2; exit 1;
k-y:
	@echo ":: $$MAKEFLAGS :: $$MFLAGS ::" ;: For debugging.
	$(am__make_keepgoing)
k-n:
	@echo ":: $$MAKEFLAGS :: $$MFLAGS ::" ;: For debugging.
	$(am__make_keepgoing) && exit 1; exit 0
END

check_make ()
{
  msg= mode= condition=: directive= reason= skip_reason=
  case $1 in
    k-[yn]) mode=$1;;
    *) fatal_ "check_run: invalid usage";;
  esac
  shift
  while test $# -gt 0; do
    case $1 in
      -C) condition=$2 skip_reason=$3; shift; shift;;
      -M) msg=$2; shift;;
      -X) directive=TODO;;
      --) shift; break;;
       *) break;;
    esac
    shift
  done
  for opts in '' '-s'  '-s -r'; do
    r=ok
    pmsg=${mode}${msg:+" [$msg]"}${opts:+" ($opts)"}
    if $condition; then
      $MAKE $opts "$mode" ${1+"$@"} || r='not ok'
    else
      directive=SKIP reason=$skip_reason
    fi
    result_ "$r" -D "$directive" -r "$reason" "$pmsg"
  done
  unset r msg pmsg opts mode condition directive reason skip_reason
}

# ----------------------------------------------------------------------

$ACLOCAL    || fatal_ "aclocal failed"
$AUTOCONF   || fatal_ "autoconf failed"
$AUTOMAKE   || fatal_ "automake failed"
./configure || fatal_ "configure failed"

# ----------------------------------------------------------------------

check_make k-n

# Test against a possible regressions similar to those that affected
# detection of dry mode ("make -n").
check_make k-n TESTS="k.test k2.test"
check_make k-n TESTS="k1 k2" AM_MAKEFLAGS="TESTS='k1 k2'"
check_make k-n TESTS="k1 k k2" AM_MAKEFLAGS='TESTS="k1 k k2"'
check_make k-n FOOFLAGS="-k -k -nkf2 k -ks --keep -k"
check_make k-n MYFLAGS="-k --keepgoing -k --keep-run -k"

# ----------------------------------------------------------------------

check_make k-y -k
check_make k-y -C using_gmake "\$MAKE is not GNU make" --keep-going

# ----------------------------------------------------------------------

# Related to automake bug#12554: the "k" in "kool" used to confound
# am__make_keepgoing into thinking the '-k' option had been passed.

pr='bug#12554'

check_make k-n -C make_supports_option_I "-I make option unsupported" \
               -M "$pr" -I kool

check_make k-n -C using_gmake "\$MAKE is not GNU make" \
               -M "$pr" -I kool --include keep-going

check_make k-y -C make_supports_option_I "-I make option unsupported" \
               -M "$pr" -I kool -k

check_make k-y -C using_gmake "\$MAKE is not GNU make" \
               -M "$pr" --keep-going -I kool --include keep-going

# ----------------------------------------------------------------------

# Test for when shell metacharacters or backslashes are in $(MAKEFLAGS).

check_metachars ()
{
  check_make k-n -M "metachars" "$@"
}

check_metachars MYFLAGS="-k \"k\" '-k' --keep-going -k"
check_metachars MYFLAGS='-knf2\ k\ \\k'
check_metachars MYFLAGS="(&) | ; \" \` '"
check_metachars MYFLAGS=" ' # ' "
check_metachars MYFLAGS='$(foo)'
check_metachars MYFLAGS='$(foo -k)'
check_metachars MYFLAGS='`touch bad`'
check_metachars MYFLAGS='`touch --keep-going bad`'

# ----------------------------------------------------------------------

:
